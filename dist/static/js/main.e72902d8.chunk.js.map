{"version":3,"sources":["config/fbConfig.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SingedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","RouteAuthentication/PrivateRouteAuth.js","RouteAuthentication/PublicRouteAuth.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","connect","dispatch","signOut","getState","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","profile","initials","SignedOutLinks","state","_ref","links","uid","layout_SignedInLinks","SingedOutLinks","isLoaded","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","concat","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","authError","signIn","validationSchema","Yup","shape","email","required","password","min","formik_esm","initialValues","onSubmit","values","setSubmitting","setErrors","setStatus","resetForm","success","error","console","log","submit","message","enableReinitialize","_ref2","isSubmitting","touched","errors","dirty","handleChange","handleBlur","handleSubmit","handleReset","placeholder","onChange","name","value","render","msg","disabled","React","formikEnhancer","withFormik","displayName","credentials","signInWithEmailAndPassword","catch","err","SignUp","signUp","firstName","lastName","newUser","getFirebase","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","_this","createProject","history","push","component","rows","authID","add","Object","objectSpread","authorId","Date","rest","objectWithoutProperties","react_router","assign","isEmpty","App","layout_Navbar","PrivateRouteAuth","exact","path","ProjectDetails","PublicRouteAuth","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","es","react_redux_firebase_es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e72902d8.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBRq4O95vR2S0dktHrjeQAeMtaf8REqa8I\",\r\n  authDomain: \"project-hub-ce158.firebaseapp.com\",\r\n  databaseURL: \"https://project-hub-ce158.firebaseio.com\",\r\n  projectId: \"project-hub-ce158\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"972748524562\",\r\n  appId: \"1:972748524562:web:e9691b812e3c2063\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n//firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a href=\"javascript:void(0)\" onClick={props.signOut}>\r\n          Log Out\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating #323232 lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignedInLinks);\r\n","import firebase from \"../../config/fbConfig\";\r\nexport const signIn = credentials => {\r\n  return (dispatch, getState) => {\r\n    //const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState) => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(res => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"SIGNUP_FAILURE\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { isLoaded, isEmpty } from \"react-redux-firebase\";\r\n\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SingedOutLinks\";\r\n\r\nconst Navbar = ({ profile, auth }) => {\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper gray darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          Project Planner\r\n        </Link>\r\n        {isLoaded(auth) && links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = ({ notifications }) => {\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map(notification => {\r\n                return (\r\n                  <li key={notification.id}>\r\n                    <span className=\"pink-text\">{notification.user} </span>\r\n                    <span>{notification.content}</span>\r\n                    <div className=\"gray-text note-date\">\r\n                      {moment(notification.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  const { title } = project;\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{title}</span>\r\n        <p>\r\n          Posted by the {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map(project => (\r\n          <Link to={`/project/${project.id}`} key={project.id}>\r\n            <ProjectSummary project={project} key={project.id} />\r\n          </Link>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    //console.log(this.props);\r\n    const { projects, notifications } = this.props;\r\n    return (\r\n      <div className=\"darshboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = props => {\r\n  const { project } = props;\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project....</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"projects\"\r\n    }\r\n  ])\r\n)(ProjectDetails);\r\n","import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage, withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\n\r\nclass SignIn extends React.Component {\r\n  render() {\r\n    const { authError } = this.props;\r\n    const { signIn } = this.props;\r\n    const validationSchema = Yup.object().shape({\r\n      email: Yup.string()\r\n        .email(\"Invalid Email !!\")\r\n        .required(\"Email is required\"),\r\n      password: Yup.string()\r\n        .min(6, \"Password must be above 6 characters\")\r\n        .required(\"Password is required\")\r\n    });\r\n    return (\r\n      <div className=\"container\">\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            password: \"\"\r\n          }}\r\n          onSubmit={(\r\n            values,\r\n            { setSubmitting, setErrors, setStatus, resetForm }\r\n          ) => {\r\n            //console.log(values);\r\n            try {\r\n              //await auth.passwordUpdate(values.oldPassword, values.passwordOne)\r\n              signIn(values);\r\n              resetForm();\r\n              setStatus({ success: true });\r\n            } catch (error) {\r\n              console.log(error);\r\n              setStatus({ success: false });\r\n              setSubmitting(false);\r\n              setErrors({ submit: error.message });\r\n            }\r\n          }}\r\n          validationSchema={validationSchema}\r\n          enableReinitialize\r\n        >\r\n          {({\r\n            values,\r\n            touched,\r\n            errors,\r\n            dirty,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            handleReset\r\n          }) => (\r\n            <Form className=\"white form\">\r\n              <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n              <Field\r\n                type=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Email\"\r\n                onChange={handleChange}\r\n                name=\"email\"\r\n                value={values.email}\r\n                className=\"input-field\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                render={msg => <div className=\"red-text\">{msg}</div>}\r\n              />\r\n              <Field\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={handleChange}\r\n                name=\"password\"\r\n                value={values.password}\r\n                className=\"input-field\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                render={msg => <div className=\"red-text\">{msg}</div>}\r\n              />\r\n              <div className=\"input-field\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"btn #EE6E73 lighten-1 z-depth-0\"\r\n                >\r\n                  Login\r\n                </button>\r\n                <div className=\"red-text\">\r\n                  {authError ? <p>{authError.message}</p> : null}\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst formikEnhancer = withFormik({\r\n  displayName: \"SignIn\"\r\n})(SignIn);\r\n\r\nconst mapStateToProps = state => ({\r\n  authError: state.auth.authError\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: values => {\r\n      dispatch(signIn(values));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(formikEnhancer);\r\n","import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage, withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends React.Component {\r\n  render() {\r\n    const { signUp } = this.props;\r\n    const validationSchema = Yup.object().shape({\r\n      email: Yup.string()\r\n        .email(\"Invalid Email !!\")\r\n        .required(\"Email is required\"),\r\n      password: Yup.string()\r\n        .min(6, \"Password must be above 6 characters\")\r\n        .required(\"Password is required\"),\r\n      firstName: Yup.string()\r\n        .min(3, \"First Name must be above 3 characters\")\r\n        .required(\"First Name is required\"),\r\n      lastName: Yup.string()\r\n        .min(3, \"Last Name must be above 1 characters\")\r\n        .required(\"Last Name is required\")\r\n    });\r\n    return (\r\n      <div className=\"container\">\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            password: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\"\r\n          }}\r\n          onSubmit={(\r\n            values,\r\n            { setSubmitting, setErrors, setStatus, resetForm }\r\n          ) => {\r\n            try {\r\n              //await auth.passwordUpdate(values.oldPassword, values.passwordOne)\r\n              signUp(values);\r\n              resetForm();\r\n              setStatus({ success: true });\r\n              setSubmitting(true);\r\n            } catch (error) {\r\n              console.log(error, \"in Signup\");\r\n              setStatus({ success: false });\r\n              setSubmitting(false);\r\n              setErrors({ submit: error.message });\r\n            }\r\n          }}\r\n          validationSchema={validationSchema}\r\n          enableReinitialize\r\n        >\r\n          {({\r\n            values,\r\n            touched,\r\n            errors,\r\n            dirty,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            handleReset\r\n          }) => (\r\n            <Form className=\"white form\">\r\n              <h5 className=\"grey-text text-darken-3\">Create an Account</h5>\r\n              <Field\r\n                type=\"text\"\r\n                id=\"firstName\"\r\n                placeholder=\"First Name\"\r\n                onChange={handleChange}\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                className=\"input-field\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"firstName\"\r\n                render={msg => <div className=\"red-text\">{msg}</div>}\r\n              />\r\n              <Field\r\n                type=\"text\"\r\n                id=\"lastName\"\r\n                placeholder=\"Last Name\"\r\n                onChange={handleChange}\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                className=\"input-field\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"lastName\"\r\n                render={msg => <div className=\"red-text\">{msg}</div>}\r\n              />\r\n              <Field\r\n                type=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Email\"\r\n                onChange={handleChange}\r\n                name=\"email\"\r\n                value={values.email}\r\n                className=\"input-field\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                render={msg => <div className=\"red-text\">{msg}</div>}\r\n              />\r\n              <Field\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={handleChange}\r\n                name=\"password\"\r\n                value={values.password}\r\n                className=\"input-field\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                render={msg => <div className=\"red-text\">{msg}</div>}\r\n              />\r\n              <div className=\"input-field\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"btn #EE6E73 lighten-1 z-depth-0\"\r\n                >\r\n                  create\r\n                </button>\r\n                {/* <div className=\"red-text\">\r\n                  {authError && <p>{authError}</p>}\r\n                </div> */}\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst formikEnhancer = withFormik({\r\n  displayName: \"Signup\"\r\n})(SignUp);\r\n\r\nconst mapStateToProps = state => ({\r\n  authError: state.auth.authError\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: values => {\r\n      dispatch(signUp(values));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(formikEnhancer);\r\n","import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage, withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\n\r\nclass CreateProject extends React.Component {\r\n  render() {\r\n    const { createProject } = this.props;\r\n    const validationSchema = Yup.object().shape({\r\n      title: Yup.string().required(\"Project Title is required\"),\r\n      content: Yup.string()\r\n        .min(20, \"Project content must be above 20 characters\")\r\n        .required(\"Project Content is required\")\r\n    });\r\n    return (\r\n      <div className=\"container\">\r\n        <Formik\r\n          initialValues={{\r\n            title: \"\",\r\n            content: \"\"\r\n          }}\r\n          onSubmit={(\r\n            values,\r\n            { setSubmitting, setErrors, setStatus, resetForm }\r\n          ) => {\r\n            try {\r\n              createProject(values);\r\n              resetForm();\r\n              setStatus({ success: true });\r\n              this.props.history.push(\"/\");\r\n            } catch (error) {\r\n              console.log(error);\r\n              setStatus({ success: false });\r\n              setSubmitting(false);\r\n              setErrors({ submit: error.message });\r\n            }\r\n          }}\r\n          validationSchema={validationSchema}\r\n          enableReinitialize\r\n        >\r\n          {({\r\n            values,\r\n            touched,\r\n            errors,\r\n            dirty,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            handleReset\r\n          }) => (\r\n            <Form className=\"white form\">\r\n              <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n              <Field\r\n                type=\"text\"\r\n                id=\"title\"\r\n                placeholder=\"Title\"\r\n                onChange={handleChange}\r\n                name=\"title\"\r\n                value={values.title}\r\n                className=\"input-field\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"title\"\r\n                render={msg => <div className=\"red-text\">{msg}</div>}\r\n              />\r\n              <Field\r\n                component=\"textarea\"\r\n                id=\"content\"\r\n                placeholder=\"Project Content\"\r\n                onChange={handleChange}\r\n                name=\"content\"\r\n                value={values.content}\r\n                className=\"materialize-textarea\"\r\n                rows=\"20\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"content\"\r\n                render={msg => <div className=\"red-text\">{msg}</div>}\r\n              />\r\n              <div className=\"input-field\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"btn #EE6E73 lighten-1 z-depth-0\"\r\n                >\r\n                  Create Project\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst formikEnhancer = withFormik({\r\n  displayName: \"CreateProject\"\r\n})(CreateProject);\r\n\r\nconst mapStateToProps = state => ({\r\n  //...\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: values => {\r\n      dispatch(createProject(values));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(formikEnhancer);\r\n","export const createProject = project => {\r\n  //console.log(\"In Actions\", project);\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authID = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authID,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateAuthRoute = ({ component: Component, auth, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        !!auth.uid ? (\r\n          <Component {...props} />\r\n        ) : auth.isEmpty && auth.isLoaded ? (\r\n          <Redirect to=\"/signin\" />\r\n        ) : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateAuthRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PubliAccessRoutes = ({ component: Component, auth, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        auth.uid ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PubliAccessRoutes);\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nimport PrivateAccessRoute from \"./RouteAuthentication/PrivateRouteAuth\";\nimport PubliAccessRoute from \"./RouteAuthentication/PublicRouteAuth\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <PrivateAccessRoute exact path=\"/\" component={Dashboard} />\n            <PrivateAccessRoute\n              path=\"/project/:id\"\n              component={ProjectDetails}\n            />\n            <PubliAccessRoute path=\"/signin\" component={SignIn} />\n            <PubliAccessRoute path=\"/signup\" component={SignUp} />\n            <PrivateAccessRoute path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login Error\", action.err);\r\n      return {\r\n        ...state,\r\n        authError: action.err\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authReducer: null\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"SIGNOUT_SUCCESS\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"SIGNUP_SUCCESS\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_FAILURE\":\r\n      console.log(\"SIGNUP_FAILURE\", action.err);\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\r\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\r\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created Project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\"; //syncing firestore\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nimport authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","/* eslint-disable no-underscore-dangle */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  reduxFirestore,\n  getFirestore\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebase from \"./config/fbConfig\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport rootReducer from \"./store/reducers/rootReducer\";\n\n// We enhance compose in order to use Redux DevTools extension\n// https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\nconst rrfConfig = {\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n  userProfile: \"users\", //here users is collection in the firestore database\n  attachAuthIsReady: true\n};\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase) // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // Create firestore instead of craete it in fbConfig.js\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}